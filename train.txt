检测部分！

单机多卡训练
python3 -m paddle.distributed.launch --gpus '2' tools/train.py -c configs/det/det_mv3_db.yml -o Global.pretrain_weights=./pretrain_models/ch_ppocr_mobile_v2.0_det_train/best_accuracy
单机单卡训练
python3 tools/train.py -c configs/det/det_mv3_db.yml -o Global.pretrain_weights=./pretrain_models/ch_ppocr_mobile_v2.0_det_train/best_accuracy -o Optimizer.base_lr=0.0005

#PPOCR_v3
python3 tools/train.py -c configs/det/ch_PP-OCRv3/ch_PP-OCRv3_det_student.yml -o Global.pretrain_weights= ./pretrain_models/en_PP-OCRv3_det_distill_train/student

#det_mv_db 对于验证集
python3 tools/eval.py -c configs/det/det_mv3_db.yml  -o Global.checkpoints="./output/db_mv3/best_accuracy" PostProcess.box_thresh=0.6 PostProcess.unclip_ratio=1.5
#det_mv_db 对于测试集
python3 tools/eval.py -c configs/det/det_mv3_db_test.yml  -o Global.checkpoints="./output/db_mv3/best_accuracy" PostProcess.box_thresh=0.6 PostProcess.unclip_ratio=1.5


[2022/06/12 14:33:51] ppocr INFO: precision:0.9250535331905781
[2022/06/12 14:33:51] ppocr INFO: recall:0.9664429530201343
[2022/06/12 14:33:51] ppocr INFO: hmean:0.9452954048140044
[2022/06/12 14:33:51] ppocr INFO: fps:28.534769394224337

#识别一个文件夹的所有图片位置
python3 tools/infer_det.py -c configs/det/det_mv3_db.yml -o Global.infer_img="./doc/imgs_en" Global.pretrained_model="./output/db_mv3_pre_0.945/best_accuracy"  PostProcess.box_thresh=0.6 PostProcess.unclip_ratio=2.0

# 导出
# 加载配置文件`det_mv3_db.yml，从output/det_db目录下加载best_accuracy模型，inference模型保存在./output/det_db_inference目录下
python3 tools/export_model.py -c configs/det/det_mv3_db.yml -o Global.pretrained_model="./output/db_mv3/best_accuracy" Global.save_inference_dir="./output/det_db_inference/" PostProcess.unclip_ratio=2.0

#DB检测模型inference 模型预测：
python3 tools/infer/predict_det.py --det_algorithm="DB" --det_model_dir="./output/det_db_inference/" --image_dir="./doc/imgs_en/" --use_gpu=True

识别部分：
finetune之前：
# GPU 评估， Global.checkpoints 为待测权重

!python tools/eval.py -c ./pretrain_models/en_number_mobile_v2.0_rec_train/config.yml -o Global.checkpoints=./pretrain_models/en_number_mobile_v2.0_rec_train/best_accuracy

#训练：
python3 -m paddle.distributed.launch --gpus '2'  tools/train.py -c ./configs/rec/PP-OCRv3/en_PP-OCRv3_rec.yml
python3 -m paddle.distributed.launch --gpus '0'  tools/train.py -c ./configs/rec/PP-OCRv3/ch_PP-OCRv3_rec_distillation.yml

# 导出
python3 tools/export_model.py -c configs/rec/PP-OCRv3/en_PP-OCRv3_rec.yml -o Global.pretrained_model=./output/v3_en_mobile_0.88103_0.0005/best_accuracy  Global.save_inference_dir=./output/v3_en_mobile_0.88103_0.0005_inference


# 评估
python3 -m paddle.distributed.launch --gpus '1' tools/eval.py -c configs/rec/PP-OCRv3/en_PP-OCRv3_rec.yml -o Global.checkpoints=./output/rec/v3_en_mobile_0.8732_0.0001/best_accuracy

python3 -m paddle.distributed.launch --gpus '1' tools/eval.py -c configs/rec/PP-OCRv3/en_PP-OCRv3_rec.yml -o Global.checkpoints=./output/v3_en_mobile_0.88103_0.0005/best_accuracy

python3 tools/infer/predict_rec.py --image_dir="./doc/imgs_en/" --rec_model_dir=./output/v3_en_mobile_0.8732_inference --rec_image_shape="3, 32, 100" --rec_char_dict_path=./ppocr/utils/en_dict.txt

#转换为onnx
paddle2onnx --model_dir ./output/line_ocr/det_db_inference \
--model_filename inference.pdmodel \
--params_filename inference.pdiparams \
--save_file ./output/line_ocr/det_onnx/model.onnx \
--opset_version 10 \
--input_shape_dict="{'x':[-1,3,-1,-1]}" \
--enable_onnx_checker True

paddle2onnx --model_dir ./output/line_ocr/v3_en_mobile_0.88103_0.0005_inference \
--model_filename inference.pdmodel \
--params_filename inference.pdiparams \
--save_file ./output/line_ocr/rec_onnx_0.88103/model.onnx \
--opset_version 10 \
--input_shape_dict="{'x':[-1,3,-1,-1]}" \
--enable_onnx_checker True

paddle2onnx --model_dir ./output/line_ocr/ch_ppocr_mobile_v2.0_cls_infer \
--model_filename ch_ppocr_mobile_v2.0_cls_infer/inference.pdmodel \
--params_filename ch_ppocr_mobile_v2.0_cls_infer/inference.pdiparams \
--save_file  \
--opset_version 10 \
--input_shape_dict="{'x':[-1,3,-1,-1]}" \
--enable_onnx_checker True

#实际预测
python3 tools/infer/predict_system.py --use_gpu=False --use_onnx=True \
--det_model_dir=./output/line_ocr/det_onnx/model.onnx  \
--rec_model_dir=./output/line_ocr/rec_onnx/model.onnx  \
--cls_model_dir=./output/line_ocr/cls_onnx/model.onnx  \
--image_dir=./doc/imgs_en \
--rec_image_shape="3, 32, 100" \
--rec_char_dict_path=./ppocr/utils/en_dict.txt



